alias host = allocate global.number
declare host with network priority local 

alias client = allocate global.player
declare client with network priority local

alias killThing = allocate global.number -- kill on/off
declare killThing with network priority high

alias this_hill = allocate global.object -- hill marker
declare this_hill with network priority low

alias hillPlacer = allocate global.object -- object to spawn hill marker at
declare hillPlacer with network priority low

alias carrierPlayer = allocate global.player -- player carrying the weapon
declare carrierPlayer with network priority low

-- conditions for the hill to spawn
alias armorAbil = allocate global.object
declare armorAbil with network priority low
alias weap = allocate global.object
declare weap with network priority low
alias weaptwo = allocate global.object
declare weaptwo with network priority low
alias vehiccy = allocate global.object
declare vehiccy with network priority low

alias timex = allocate global.number
declare timex with network priority low

alias tgt = allocate global.object
declare tgt with network priority local

alias pToKill = allocate global.player
declare pToKill with network priority low

for each player do -- Why?
   if current_player.is_elite() then 
      current_player.set_loadout_palette(elite_tier_1)
   end
   if not current_player.is_elite() then 
      current_player.set_loadout_palette(spartan_tier_1)
   end
end

-- declare crash loop  
function trigger_0()
    game.play_sound_for(all_players, timer_beep, true)
    trigger_0()
end

do
    host = 1 -- will only run on host
end

-- in order to trigger the weapon drop, the player must be
-- 1) in the passenger seat of a warthog,
-- 2) have active camo armor ability equipped,
-- 3) have a plasma pistol in hand, and plasma rifle in secondary slot
for each player do
    vehiccy = current_player.get_vehicle()
    if vehiccy.is_of_type(warthog) then
        weap = current_player.get_weapon(primary)
        weaptwo = current_player.get_weapon(secondary)
        armorabil = current_player.get_armor_ability()
        if armorabil.is_of_type(active_camo_aa) then
            timex += 1
            if timex == 500 then
                this_hill = current_player.biped.place_at_me(focus_rifle, "autokillr", never_garbage_collect, 0, 0, 0, none)
                this_hill.set_shape(box, 10000, 1, 1, 1) 
                this_hill.set_shape_visibility(no_one)
                this_hill.set_scale(50) -- tiny invis weapon
                timex = 0
            end
        end
    end
end

-- this identifies the local player.
-- it's much more efficient than the dummy object method,
-- but only works if the player has looked at something in the past
on local: do
    for each player do
        tgt = current_player.get_crosshair_target()
        if tgt != no_object then
            client = current_player
            script_widget[0].set_text("Your name: %s", client)
            script_widget[0].set_visibility(client, true)
        end
    end
    if client == pToKill and client != no_player and host == 0 then -- Si el cliente es el jugador a matar, y el cliente esta inicializado, y este cliente no es el host.
        script_widget[1].set_text(", you have been kicked", client)
        script_widget[1].set_visibility(client, true)
        -- game.play_sound_for(inv_cue_spartan_win_big)
        trigger_0()
    end
end

-- kill loop: if a player enters the "killzone" area, run crashloop on their client
for each object with label "autokillr" do
    for each player do
        if current_object.shape_contains(current_player.biped) then
            -- allocate temporary number
            carrierPlayer = current_object.get_carrier()
            if current_player != carrierPlayer and carrierPlayer != no_player and current_object.is_of_type(focus_rifle) then -- suicide prevention
                pToKill = current_player -- flag the player
                game.show_message_to(carrierPlayer, timer_beep, "%s running stack overflow", pToKill)
                game.show_message_to(all_players, none, "%s was booted for bad sportsmanship :(", pToKill)
            end
        end
    end
end